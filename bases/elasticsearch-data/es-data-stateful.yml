apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-log-data
spec:
  serviceName: elasticsearch-log-data
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      tier: logging-plane
  template:
    metadata:
      labels:
        tier: logging-plane
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - elasticsearch-log
                - key: role
                  operator: In
                  values:
                  - data
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      terminationGracePeriodSeconds: 600
      priorityClassName: infra
      containers:
      - name: es-data
        image: mintel/elasticsearch:v6.6.0-1
        lifecycle:
          postStart:
            exec:
              command: [ "/start-data-node.sh" ]
          preStop:
            exec:
              command: [ "/stop-data-node.sh" ]
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RECOVERY_MAX_BYTES
          value: 70mb
        - name: CLUSTER_NAME
          value: logs
        - name: DISCOVERY_SERVICE
          value: "elasticsearch-log-discovery.monitoring.svc.cluster.local"
        - name: MINIMUM_NUMBER_OF_MASTERS
          value: "2"
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "true"
        - name: NODE_DATA
          value: "true"
        - name: HTTP_ENABLE
          value: "true"
        - name: NETWORK_HOST
          value: "0.0.0.0"
        - name: MAINTENANCE_MODE
          value: "ALLOCATION"
        - name: ES_JAVA_OPTS
          value: -Xms4096m -Xmx4096m
        - name: POST_TERM_WAIT
          value: "5"
        - name: NETWORK_ADDRESS_CACHE_TTL
          value: "2"
        - name: NETWORK_ADDRESS_CACHE_NEGATIVE_TTL
          value: "2"
        # PROCESSORS NEED TO BE AN INTEGER - SET LIMITS CPU ACCORDINGLY
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        resources:
          requests:
            cpu: 250m
            memory: 8Gi
          limits:
            cpu: "2"
            memory: 8Gi
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 40
          periodSeconds: 10
        volumeMounts:
        - name: storage
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      storageClassName: fast
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 100Gi
